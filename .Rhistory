"sentiments.Anger"=numeric(),
"sentiments.Fear"=numeric(),
"sentiments.Joy"=numeric(),
"sentiments.Sadness"=numeric(),
"sentiments.Analytical"=numeric(),
"sentiments.Confident"=numeric(),
"sentiments.Tentative"=numeric())
full_df <- data.frame(username=character(),
text=character(),
forum_name=character(),
time=as.Date(),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
full_df <- data.frame(username=character(),
text=character(),
forum_name=character(),
time=date(),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
full_df <- as.data.frame(username=character(),
text=character(),
forum_name=character(),
time=date(),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
full_df <- as.data.frame(username=character(0),
text=character(0),
forum_name=character(0),
time=date(0),
sentiments.Anger=numeric(0),
sentiments.Fear=numeric(0),
sentiments.Joy=numeric(0),
sentiments.Sadness=numeric(0),
sentiments.Analytical=numeric(0),
sentiments.Confident=numeric(0),
sentiments.Tentative=numeric(0))
full_df <- as.data.frame(username=character(),
text=character(),
forum_name=character(),
time=as.Date(character()),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
full_df <- data.frame(username=character(),
text=character(),
forum_name=character(),
time=as.Date(character()),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
rbind(full_df, row, stringsAsFactors = FALSE)
full_Df
full_df
rbind(full_df, row, stringsAsFactors = FALSE)
person_df[-1] <- row
person_df <- data.frame(username=character(),
text=character(),
forum_name=character(),
time=as.Date(character()),
sentiments.Anger=numeric(),
sentiments.Fear=numeric(),
sentiments.Joy=numeric(),
sentiments.Sadness=numeric(),
sentiments.Analytical=numeric(),
sentiments.Confident=numeric(),
sentiments.Tentative=numeric())
person_df[-1] <- row
warnings()
person_Df
person_df
person_df[nrow(person_df)] <- row
warnings()
person_df[nrow(person_df) + 1] <- row
warnings()
row
length(row)
person_df <- rbind(person_df, row)
person_df
for (i in 1:n_users) {
username <- all_usernames[i]
for (post in jsondata[[i]]$posts) {
sentiments <- post$sentiments
row <- data.frame(username             =username,
text                 =post$text,
forum_name           =post$forum_name,
time                 =as.Date(post$time),
sentiments.Anger     =sentiments$Anger,
sentiments.Fear      =sentiments$Fear,
sentiments.Joy       =sentiments$Joy,
sentiments.Sadness   =sentiments$Sadness,
sentiments.Analytical=sentiments$Analytical,
sentiments.Confident =sentiments$Confident,
sentiments.Tentative =sentiments$Tentative)
person_df <- rbind(person_df, row)
}
}
person_df
people.pca <- prcomp(person_df[5:12], center=TRUE, .scale=TRUE)
people.pca <- prcomp(person_df[,5:12], center=TRUE, .scale=TRUE)
5:12
person_df[,5:12]
person_df:[,5:12]
person_df[:,5:12]
person_df[1:n,5:12]
person_df[5:12]
person_df[5:12,]
people.pca <- prcomp(person_df[,'sentiments.Anger':'sentiments.Tentative'], center=TRUE, .scale=TRUE)
people.pca
person_df[,'sentiments.Anger':'sentiments.Tentative']
person_df[,'sentiments.Anger']
person_df[,'sentiments.Anger':]
person_df %>% select('sentiments.Anger':'sentiments:Tentative')
person_df %>% select('sentiments.Anger')
person_df %>% select(`sentiments.Anger`:`sentiments.Tentative`)
people.pca <- person_df %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE, .scale=TRUE)
people.pca <- person_df %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
people.pca
ggbiplot(people.pca)
people.pca <- person_df %>%
filter(forum_name == 'solonely') %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
_df %>%
filter(forum_name == 'solonely') %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
ggbiplot(people.pca)
people.pca <- person_df %>%
filter(forum_name == 'solonely') %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
ggbiplot(people.pca)
people.pca <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
people.pca <- person_df %>%
filter(forum_name == 'solonely') %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
ggbiplot(people.pca)
people.pca <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
ggbiplot(people.pca)
for (i in 1:n_users) {
username <- all_usernames[i]
for (post in jsondata[[i]]$posts) {
sentiments <- post$sentiments
row <- data.frame(username             =username,
text                 =post$text,
forum_name           =post$forum_name,
time                 =as.Date(post$time),
sentiments.Anger     =sentiments$Anger,
sentiments.Fear      =sentiments$Fear,
sentiments.Joy       =sentiments$Joy,
sentiments.Sadness   =sentiments$Sadness,
sentiments.Analytical=sentiments$Analytical,
sentiments.Confident =sentiments$Confident,
sentiments.Tentative =sentiments$Tentative)
person_df[nrow(person_df) + 1,] <- row
}
}
for (i in 1:n_users) {
username <- all_usernames[i]
for (post in jsondata[[i]]$posts) {
sentiments <- post$sentiments
row <- data.frame(username             =username,
text                 =post$text,
forum_name           =post$forum_name,
time                 =as.Date(post$time),
sentiments.Anger     =sentiments$Anger,
sentiments.Fear      =sentiments$Fear,
sentiments.Joy       =sentiments$Joy,
sentiments.Sadness   =sentiments$Sadness,
sentiments.Analytical=sentiments$Analytical,
sentiments.Confident =sentiments$Confident,
sentiments.Tentative =sentiments$Tentative)
person_df[nrow(person_df) + 1,] <- row
}
print(i)
}
person_df <- read.table("data/processed/people.csv")
person_df <- read.table("data/processed/people.csv", header=TRUE)
person_df <- read.table("data/processed/people.csv", header=TRUE)
person_df <- read.csv("data/processed/people.csv", header=TRUE)
person_df <- read.table("data/processed/people.csv", header=TRUE, sep=',')
person_df
as.tibble(read.table("data/processed/people.csv", header=TRUE, sep=','))
person_df <- read_csv("data/processed/people.csv", header=TRUE)
person_df <- read_csv("data/processed/people.csv")
person_Df
person_df
person_df <- read_csv("data/processed/people.csv")
person_df
ggplot(people.pca)
ggplot(people.pca)
people.pca <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
ggplot(people.pca)
autoplot(people.pca)
library(ggfortify)
install.packages('ggfortify')
library(rjson)
library(tidyverse)
library(ggfortify)
person_df <- read_csv("data/processed/people.csv")
people.pca <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`) %>%
prcomp(center=TRUE)
autoplot(people.pca)
autoplot(people.pca)
autoplot(people.pca, color=clusters)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
filtered_df %>% prcomp(center=TRUE)
library(rjson)
library(tidyverse)
library(ggfortify)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
filtered_df %>% prcomp(center=TRUE)
autoplot(people.pca, color=clusters)
library(rjson)
library(tidyverse)
library(ggfortify)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplot(people.pca, color=clusters)
autoplot(people.pca, colour=clusters)
ggbiplot(people.pca, color=clusters)
ggbiplot(people.pca, color=clusters)
ggbiplot(people.pca)
ggbiplot(people.pca, color=clusters,loadings = TRUE, loadings.label = TRUE)
autoplot(people.pca, color=clusters, loadings = TRUE, loadings.label = TRUE)
autoplot(people.pca, color=clusters, loadings = TRUE, loadings.label = TRUE, data=filtered_df)
autoplot(people.pca,
loadings = TRUE, loadings.label = TRUE,
labels = TRUE,
data=filtered_df)
autoplot(people.pca,
loadings = TRUE, loadings.label = TRUE,
color = clusters,
data=filtered_df)
autoplot(people.pca,
#loadings = TRUE, loadings.label = TRUE,
color = clusters,
data=filtered_df)
library(rjson)
library(tidyverse)
library(ggfortify)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplot(people.pca,
#loadings = TRUE, loadings.label = TRUE,
color = clusters,
data=filtered_df)
autoplot(people.pca,
#loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
autoplot(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
autoplotly(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
library(rjson)
library(tidyverse)
library(ggfortify)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplotly(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
library(rjson)
library(tidyverse)
library(ggfortify)
library(autoplotly)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplotly(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
install.packages('autoplotly')
library(rjson)
library(tidyverse)
library(ggfortify)
library(autoplotly)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplotly(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
library(rjson)
library(tidyverse)
library(ggfortify)
library(autoplotly)
person_df <- read_csv("data/processed/people.csv")
filtered_df <- person_df %>%
filter(username == "bulbie") %>%
select(`sentiments.Anger`:`sentiments.Tentative`)
kmeans_obj <- kmeans(filtered_df, 10, nstart=25)
clusters <- kmeans_obj$cluster
centers <- kmeans_obj$centers
people.pca <- filtered_df %>% prcomp(center=TRUE)
autoplotly(people.pca,
loadings = TRUE, loadings.label = TRUE,
colour = clusters,
data=filtered_df)
install.packages("quanteda")
library(quanteda)
library(tidyverse)
tokens
all_posts <- read_csv("data/people.csv")
all_posts <- read_csv("data/processed/people.csv")
all_posts
all_posts %>%
arrange(length(text), descending = TRUE)
all_posts %>%
arrange(Vectorize(length)(text), descending = TRUE)
Vectorize(length)
Vectorize(length)(c("hi", "noh"))
Vectorize(length)("hi", "noh")
Vectorize(length)(c("a", "he", "d"))
Vectorize(length)(c("a", "he", "d"), c("h"))
length(c("a"), c(5, 3, 41))
Vectorize(length, c("a", "he", "d"), c("h"))
lapply(length, c(c("5", 6, 3, 5), c(5, 4, 1)))
lapply(c(c("5", 6, 3, 5), c(5, 4, 1)), length)
sapply(c(c("5", 6, 3, 5), c(5, 4, 1)), length)
sapply(c(c("5", 6, 3, 5), c(5, 4, 1)), length)
lapply(c("hi", "hello", "no"))
lapply(c("hi", "hello", "no"), length)
length("hi")
nchar("hi")
lapply(c("hi", "hello", "no"), nchar)
all_posts %>%
arrange(nchar(text), descending = TRUE)
sapply(c("hi", "hello", "no"), nchar)
all_posts %>%
arrange(sapply(nchar(text)), descending = TRUE)
all_posts %>%
arrange(sapply(text, nchar), descending = TRUE)
all_posts %>%
arrange(sapply(text, nchar), descending = TRUE)
sapply(all_posts$text, nchar)
all_posts %>%
arrange(text, sapply(text, nchar), descending = TRUE)
all_posts %>%
arrange(desc(sapply(text, nchar))
)
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
slice(1)
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
slice(1) %>%
ungroup()
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
slice(1) %>%
extract2()
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
pluck(1)
longest_post
tokens(longest_post)
nchar(longest_post)
length(longest_post)
longest_post <- all_posts %>%
arrange(sapply(text, nchar)) %>%
select(text) %>%
pluck(1)
tokens(longest_post)
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
.[[1]]
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
.[[1]]
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
extract(1)
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
nth(1)
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text)
longest_post
nth(longest_post, 1)
longest_post
top_n(longest_post, 1)
top_n(longest_post, 2)
longest_post %>%
arrange(desc(sapply(text, nchar))) %>%
top_n(2)
longest_post %>%
arrange(desc(sapply(text, nchar))) %>%
nth(2)
longest_post[[1]]
longest_post[[1]][1]
longest_post[[1]][[1]]
longest_post[[1]][1]
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
.[[1]][1]
longest_post
longest_post <- all_posts %>%
arrange(desc(sapply(text, nchar))) %>%
select(text) %>%
.[[1]][1]
longest_post
install.packages("textir")
library(textir)
we8there
data(we8there)
we8there
we8thereRatings
data(we8there)
## 20 high-variance tf-idf terms
colnames(we8thereCounts)[
order(-sdev(tfidf(we8thereCounts)))[1:20]]
install.packages("openNLP")
